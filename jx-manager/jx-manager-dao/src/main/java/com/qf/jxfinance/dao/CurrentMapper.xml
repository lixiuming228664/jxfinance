<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.jxfinance.dao.CurrentMapper" >
  <resultMap id="BaseResultMap" type="com.qf.jxfinance.pojo.po.Current" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="fc_id" property="fcId" jdbcType="BIGINT" />
    <result column="risk" property="risk" jdbcType="INTEGER" />
    <result column="nav" property="nav" jdbcType="INTEGER" />
    <result column="three_rate" property="threeRate" jdbcType="INTEGER" />
    <result column="redemp_time" property="redempTime" jdbcType="INTEGER" />
    <result column="near_year" property="nearYear" jdbcType="INTEGER" />
    <result column="init_amount" property="initAmount" jdbcType="INTEGER" />
    <result column="set_time" property="setTime" jdbcType="TIMESTAMP" />
    <result column="new_scale" property="newScale" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qf.jxfinance.pojo.po.Current" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, fc_id, risk, nav, three_rate, redemp_time, near_year, init_amount, set_time, 
    new_scale, title, state
  </sql>
  <sql id="Blob_Column_List" >
    message
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.qf.jxfinance.pojo.po.CurrentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from current
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.jxfinance.pojo.po.CurrentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from current
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from current
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from current
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.jxfinance.pojo.po.CurrentExample" >
    delete from current
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.jxfinance.pojo.po.Current" >
    insert into current (id, fc_id, risk, 
      nav, three_rate, redemp_time, 
      near_year, init_amount, set_time, 
      new_scale, title, state, 
      message)
    values (#{id,jdbcType=BIGINT}, #{fcId,jdbcType=BIGINT}, #{risk,jdbcType=INTEGER}, 
      #{nav,jdbcType=INTEGER}, #{threeRate,jdbcType=INTEGER}, #{redempTime,jdbcType=INTEGER}, 
      #{nearYear,jdbcType=INTEGER}, #{initAmount,jdbcType=INTEGER}, #{setTime,jdbcType=TIMESTAMP}, 
      #{newScale,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.jxfinance.pojo.po.Current" >
    insert into current
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fcId != null" >
        fc_id,
      </if>
      <if test="risk != null" >
        risk,
      </if>
      <if test="nav != null" >
        nav,
      </if>
      <if test="threeRate != null" >
        three_rate,
      </if>
      <if test="redempTime != null" >
        redemp_time,
      </if>
      <if test="nearYear != null" >
        near_year,
      </if>
      <if test="initAmount != null" >
        init_amount,
      </if>
      <if test="setTime != null" >
        set_time,
      </if>
      <if test="newScale != null" >
        new_scale,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fcId != null" >
        #{fcId,jdbcType=BIGINT},
      </if>
      <if test="risk != null" >
        #{risk,jdbcType=INTEGER},
      </if>
      <if test="nav != null" >
        #{nav,jdbcType=INTEGER},
      </if>
      <if test="threeRate != null" >
        #{threeRate,jdbcType=INTEGER},
      </if>
      <if test="redempTime != null" >
        #{redempTime,jdbcType=INTEGER},
      </if>
      <if test="nearYear != null" >
        #{nearYear,jdbcType=INTEGER},
      </if>
      <if test="initAmount != null" >
        #{initAmount,jdbcType=INTEGER},
      </if>
      <if test="setTime != null" >
        #{setTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newScale != null" >
        #{newScale,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.jxfinance.pojo.po.CurrentExample" resultType="java.lang.Integer" >
    select count(*) from current
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update current
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fcId != null" >
        fc_id = #{record.fcId,jdbcType=BIGINT},
      </if>
      <if test="record.risk != null" >
        risk = #{record.risk,jdbcType=INTEGER},
      </if>
      <if test="record.nav != null" >
        nav = #{record.nav,jdbcType=INTEGER},
      </if>
      <if test="record.threeRate != null" >
        three_rate = #{record.threeRate,jdbcType=INTEGER},
      </if>
      <if test="record.redempTime != null" >
        redemp_time = #{record.redempTime,jdbcType=INTEGER},
      </if>
      <if test="record.nearYear != null" >
        near_year = #{record.nearYear,jdbcType=INTEGER},
      </if>
      <if test="record.initAmount != null" >
        init_amount = #{record.initAmount,jdbcType=INTEGER},
      </if>
      <if test="record.setTime != null" >
        set_time = #{record.setTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.newScale != null" >
        new_scale = #{record.newScale,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update current
    set id = #{record.id,jdbcType=BIGINT},
      fc_id = #{record.fcId,jdbcType=BIGINT},
      risk = #{record.risk,jdbcType=INTEGER},
      nav = #{record.nav,jdbcType=INTEGER},
      three_rate = #{record.threeRate,jdbcType=INTEGER},
      redemp_time = #{record.redempTime,jdbcType=INTEGER},
      near_year = #{record.nearYear,jdbcType=INTEGER},
      init_amount = #{record.initAmount,jdbcType=INTEGER},
      set_time = #{record.setTime,jdbcType=TIMESTAMP},
      new_scale = #{record.newScale,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update current
    set id = #{record.id,jdbcType=BIGINT},
      fc_id = #{record.fcId,jdbcType=BIGINT},
      risk = #{record.risk,jdbcType=INTEGER},
      nav = #{record.nav,jdbcType=INTEGER},
      three_rate = #{record.threeRate,jdbcType=INTEGER},
      redemp_time = #{record.redempTime,jdbcType=INTEGER},
      near_year = #{record.nearYear,jdbcType=INTEGER},
      init_amount = #{record.initAmount,jdbcType=INTEGER},
      set_time = #{record.setTime,jdbcType=TIMESTAMP},
      new_scale = #{record.newScale,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.jxfinance.pojo.po.Current" >
    update current
    <set >
      <if test="fcId != null" >
        fc_id = #{fcId,jdbcType=BIGINT},
      </if>
      <if test="risk != null" >
        risk = #{risk,jdbcType=INTEGER},
      </if>
      <if test="nav != null" >
        nav = #{nav,jdbcType=INTEGER},
      </if>
      <if test="threeRate != null" >
        three_rate = #{threeRate,jdbcType=INTEGER},
      </if>
      <if test="redempTime != null" >
        redemp_time = #{redempTime,jdbcType=INTEGER},
      </if>
      <if test="nearYear != null" >
        near_year = #{nearYear,jdbcType=INTEGER},
      </if>
      <if test="initAmount != null" >
        init_amount = #{initAmount,jdbcType=INTEGER},
      </if>
      <if test="setTime != null" >
        set_time = #{setTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newScale != null" >
        new_scale = #{newScale,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qf.jxfinance.pojo.po.Current" >
    update current
    set fc_id = #{fcId,jdbcType=BIGINT},
      risk = #{risk,jdbcType=INTEGER},
      nav = #{nav,jdbcType=INTEGER},
      three_rate = #{threeRate,jdbcType=INTEGER},
      redemp_time = #{redempTime,jdbcType=INTEGER},
      near_year = #{nearYear,jdbcType=INTEGER},
      init_amount = #{initAmount,jdbcType=INTEGER},
      set_time = #{setTime,jdbcType=TIMESTAMP},
      new_scale = #{newScale,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.jxfinance.pojo.po.Current" >
    update current
    set fc_id = #{fcId,jdbcType=BIGINT},
      risk = #{risk,jdbcType=INTEGER},
      nav = #{nav,jdbcType=INTEGER},
      three_rate = #{threeRate,jdbcType=INTEGER},
      redemp_time = #{redempTime,jdbcType=INTEGER},
      near_year = #{nearYear,jdbcType=INTEGER},
      init_amount = #{initAmount,jdbcType=INTEGER},
      set_time = #{setTime,jdbcType=TIMESTAMP},
      new_scale = #{newScale,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>