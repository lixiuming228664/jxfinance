<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.jxfinance.dao.FixedtimeMapper" >
  <resultMap id="BaseResultMap" type="com.qf.jxfinance.pojo.po.Fixedtime" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="comid" property="comid" jdbcType="BIGINT" />
    <result column="seven_earnings" property="sevenEarnings" jdbcType="INTEGER" />
    <result column="copies" property="copies" jdbcType="INTEGER" />
    <result column="period_cycle" property="periodCycle" jdbcType="INTEGER" />
    <result column="init_amount" property="initAmount" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qf.jxfinance.pojo.po.Fixedtime" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, comid, seven_earnings, copies, period_cycle, init_amount, state, title
  </sql>
  <sql id="Blob_Column_List" >
    message
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.qf.jxfinance.pojo.po.FixedtimeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fixedtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.jxfinance.pojo.po.FixedtimeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fixedtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fixedtime
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from fixedtime
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.jxfinance.pojo.po.FixedtimeExample" >
    delete from fixedtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.jxfinance.pojo.po.Fixedtime" >
    insert into fixedtime (id, comid, seven_earnings, 
      copies, period_cycle, init_amount, 
      state, title, message
      )
    values (#{id,jdbcType=BIGINT}, #{comid,jdbcType=BIGINT}, #{sevenEarnings,jdbcType=INTEGER}, 
      #{copies,jdbcType=INTEGER}, #{periodCycle,jdbcType=INTEGER}, #{initAmount,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{message,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qf.jxfinance.pojo.po.Fixedtime" >
    insert into fixedtime
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="comid != null" >
        comid,
      </if>
      <if test="sevenEarnings != null" >
        seven_earnings,
      </if>
      <if test="copies != null" >
        copies,
      </if>
      <if test="periodCycle != null" >
        period_cycle,
      </if>
      <if test="initAmount != null" >
        init_amount,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="comid != null" >
        #{comid,jdbcType=BIGINT},
      </if>
      <if test="sevenEarnings != null" >
        #{sevenEarnings,jdbcType=INTEGER},
      </if>
      <if test="copies != null" >
        #{copies,jdbcType=INTEGER},
      </if>
      <if test="periodCycle != null" >
        #{periodCycle,jdbcType=INTEGER},
      </if>
      <if test="initAmount != null" >
        #{initAmount,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.jxfinance.pojo.po.FixedtimeExample" resultType="java.lang.Integer" >
    select count(*) from fixedtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fixedtime
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.comid != null" >
        comid = #{record.comid,jdbcType=BIGINT},
      </if>
      <if test="record.sevenEarnings != null" >
        seven_earnings = #{record.sevenEarnings,jdbcType=INTEGER},
      </if>
      <if test="record.copies != null" >
        copies = #{record.copies,jdbcType=INTEGER},
      </if>
      <if test="record.periodCycle != null" >
        period_cycle = #{record.periodCycle,jdbcType=INTEGER},
      </if>
      <if test="record.initAmount != null" >
        init_amount = #{record.initAmount,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update fixedtime
    set id = #{record.id,jdbcType=BIGINT},
      comid = #{record.comid,jdbcType=BIGINT},
      seven_earnings = #{record.sevenEarnings,jdbcType=INTEGER},
      copies = #{record.copies,jdbcType=INTEGER},
      period_cycle = #{record.periodCycle,jdbcType=INTEGER},
      init_amount = #{record.initAmount,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fixedtime
    set id = #{record.id,jdbcType=BIGINT},
      comid = #{record.comid,jdbcType=BIGINT},
      seven_earnings = #{record.sevenEarnings,jdbcType=INTEGER},
      copies = #{record.copies,jdbcType=INTEGER},
      period_cycle = #{record.periodCycle,jdbcType=INTEGER},
      init_amount = #{record.initAmount,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.jxfinance.pojo.po.Fixedtime" >
    update fixedtime
    <set >
      <if test="comid != null" >
        comid = #{comid,jdbcType=BIGINT},
      </if>
      <if test="sevenEarnings != null" >
        seven_earnings = #{sevenEarnings,jdbcType=INTEGER},
      </if>
      <if test="copies != null" >
        copies = #{copies,jdbcType=INTEGER},
      </if>
      <if test="periodCycle != null" >
        period_cycle = #{periodCycle,jdbcType=INTEGER},
      </if>
      <if test="initAmount != null" >
        init_amount = #{initAmount,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qf.jxfinance.pojo.po.Fixedtime" >
    update fixedtime
    set comid = #{comid,jdbcType=BIGINT},
      seven_earnings = #{sevenEarnings,jdbcType=INTEGER},
      copies = #{copies,jdbcType=INTEGER},
      period_cycle = #{periodCycle,jdbcType=INTEGER},
      init_amount = #{initAmount,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.jxfinance.pojo.po.Fixedtime" >
    update fixedtime
    set comid = #{comid,jdbcType=BIGINT},
      seven_earnings = #{sevenEarnings,jdbcType=INTEGER},
      copies = #{copies,jdbcType=INTEGER},
      period_cycle = #{periodCycle,jdbcType=INTEGER},
      init_amount = #{initAmount,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>